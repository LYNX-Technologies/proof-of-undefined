/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506108fd806100606000396000f3fe6080604052600436106100345760003560e01c806351cff8d914610039578063a694fc3a14610062578063ecfb49a31461007e575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906104af565b6100a9565b005b61007c600480360381019061007791906104d8565b6102e7565b005b34801561008a57600080fd5b5061009361047f565b6040516100a0919061065f565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541161012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906105bf565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015442116101b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a99061061f565b60405180910390fd5b6000819050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546002600082825461020b91906106e1565b925050819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508073ffffffffffffffffffffffffffffffffffffffff166108fc600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549081150290604051600060405180830381858888f193505050501580156102e2573d6000803e3d6000fd5b505050565b666a94d74f430000341015610331576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610328906105df565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154146103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad9061063f565b60405180910390fd5b8042106103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef906105ff565b60405180910390fd5b604051806040016040528082815260200134815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050503460026000828254610475919061068b565b9250508190555050565b60025481565b60008135905061049481610899565b92915050565b6000813590506104a9816108b0565b92915050565b6000602082840312156104c157600080fd5b60006104cf84828501610485565b91505092915050565b6000602082840312156104ea57600080fd5b60006104f88482850161049a565b91505092915050565b600061050e60188361067a565b915061051982610780565b602082019050919050565b600061053160248361067a565b915061053c826107a9565b604082019050919050565b600061055460228361067a565b915061055f826107f8565b604082019050919050565b6000610577601d8361067a565b915061058282610847565b602082019050919050565b600061059a601e8361067a565b91506105a582610870565b602082019050919050565b6105b981610747565b82525050565b600060208201905081810360008301526105d881610501565b9050919050565b600060208201905081810360008301526105f881610524565b9050919050565b6000602082019050818103600083015261061881610547565b9050919050565b600060208201905081810360008301526106388161056a565b9050919050565b600060208201905081810360008301526106588161058d565b9050919050565b600060208201905061067460008301846105b0565b92915050565b600082825260208201905092915050565b600061069682610747565b91506106a183610747565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156106d6576106d5610751565b5b828201905092915050565b60006106ec82610747565b91506106f783610747565b92508282101561070a57610709610751565b5b828203905092915050565b600061072082610727565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5573657220646f65736e27742068617665206120706c616e0000000000000000600082015250565b7f4e65656420746f207472616e73666572206174206c6561737420302e3033206560008201527f7468657200000000000000000000000000000000000000000000000000000000602082015250565b7f446561646c696e65206d7573742062652073657420696e20746865206675747560008201527f7265000000000000000000000000000000000000000000000000000000000000602082015250565b7f446561646c696e65206861736e2774206265656e206163686965766564000000600082015250565b7f5573657220616c72656164792068617320736574207570206120706c616e0000600082015250565b6108a281610715565b81146108ad57600080fd5b50565b6108b981610747565b81146108c457600080fd5b5056fea26469706673582212206859ba9ddb3f3333fac62178d4a6e3dada6676830fbd92a1df3e7b9207c5eb6164736f6c63430008040033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
